{
  "homepage.urlPreview.placeholder": "روی هر بخش از URL کلیک کنید تا بیشتر در مورد آن بدانید",
  "footer.copyright": "با عشق توسط {author} ساخته شده",
  "url.http.protocol.name": "پروتکل",
  "url.http.protocol.definition": "پروتکل در واقع محتوا و ماهیت برقراری ارتباط بین یک مرورگر و یک سرور را توصیف می کند.",
  "url.http.protocol.description": "<p>متداول ترین پروتکل های وب عبارتند از <strong>HTTPS</strong> و <strong>HTTP</strong>، که برای کنترل کردن اسناد ابر متن (HTML) طراحی شده اند. البته پروتکل های بسیار دیگری وجود دارند، مانند FTP (File Transfer Protocol) برای انتقال فایل ها، یا POP (Post Office Protocol) که برای ارسال و دریافت ایمیل کاربرد دارد.</p>",
  "url.http.domain.name": "نام دامنه",
  "url.http.domain.definition": "دامنه یک آدرس برای سرور است که به راحتی برای انسان قابل خواندن باشد.",
  "url.http.domain.description": "<p>در واقعیت، همه سرورها دارای آدرس IP هستند (i.e. <code>111.22.33.44</code>)، اما از آنجایی که این نوع آدرس را به سختی می توان به خاطر سپرد و همچنین امکان تغییر دارد، ما اغلب از نام دامنه استفاده می کنیم که به مانند یک نام مستعار برای آن آدرس است.</p><p>برای هر درخواست، نام دامنه برای یک DNS (Domain Name Servers) فرستاده می شود که آن را به آدرس IP واقعی سرور تبدیل می کند.</p>",
  "url.http.port.name": "درگاه",
  "url.http.port.definition": "شماره درگاه توسط سرور مورد استفاده قرار می گیرد تا سرویس مشخصی را ارائه دهد.",
  "url.http.port.description": "<p>از آنجا که ممکن است یک سرور در حال ارائه چندین سرویس مختلف باشد، مانند میزبانی یک صفحه وب یا رسیدگی به انتقال پرونده، هر یک از این سرویس ها در درگاه های مختلف به صورت عمومی در دسترس خواهند بود.</p><p>اگرچه به ندرت می توانید شماره پورت را در وب مشاهده کنید، اما همیشه وجود آن ضروری است، و به طور پیش فرض از <ProtocolLink>protocol</ProtocolLink> استخراج می شود:</p><ul><li><code>:80</code> برای HTTP</li><li><code>:443</code> برای HTTPS</li></ul>",
  "url.http.path.name": "مسیر",
  "url.http.path.definition": "مسیر یا Path رشته ای است که به یک منبع خاص روی سرور اشاره دارد.",
  "url.http.path.description": "<p>سرور ، یا مشتری، تصمیم می گیرد که چگونه می تواند یک درخواست را به ازای یک مسیر مشخص انجام دهد. به عنوان مثال، ممکن است یک صفحه HTML را برگرداند، یا با یک سرور دیگر ارتباط برقرار کرده و با یک داده خام پاسخ دهد.</p>",
  "url.http.query.name": "پارامتر جست و جو",
  "url.http.query.definition": "این پارامترها، آرگومان هایی هستند که به مسیر ارسال می شوند.",
  "url.http.query.description": "<p>آنها در قالب زوج <code>key=value</code> و با یک علامت <code>?</code> (question mark) به مسیر اضافه می شوند. هر پارامتر دیگری با یک علامت <code>&</code> (ampersand) اضافه خواهد شد:</p><ul><li><code>?userId=123&type=reader</code></li></ul><p>سرور می تواند به یک رشته پرس و جو دسترسی پیدا کرده و آن را تجزیه کند تا اطلاعات بیشتری درباره درخواست دریافت کند.</p>",
  "url.http.fragment.name": "Fragment",
  "url.http.fragment.definition": "Fragment ارجاعی به یک بخش خاص از صفحه است. گاهی نیز تحت عنوان <em>anchor</em>، یا <em>hash</em> نامیده می شود.",
  "url.http.fragment.description": "<p>در توسعه مدرن یک Fragment همچنین می تواند برای نشان دادن وضعیت صفحه استفاده شود. یکی از این مثال ها مسیریابی سمت مشتری است که می توانید در همین وب سایت مشاهده کنید.</p>"
}
